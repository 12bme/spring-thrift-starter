{"name":"Apache Thrift Starter for Spring Boot","tagline":"","body":"## What is it\r\n\r\nSet of cool annotations that helps you building Thrift applications with Spring Boot.\r\n\r\n## How connect project\r\n\r\nIts very simple:\r\n\r\n```\r\nrepositories {\r\n    maven {\r\n        url  \"http://dl.bintray.com/aatarasoff/maven\"\r\n    }\r\n}\r\n```\r\n\r\n```\r\ncompile 'info.developerblog.spring.thrift:spring-thrift-starter:0.1.3'\r\n```\r\n\r\n## How use this\r\n\r\nAnnotation @ThriftHandler(\"servlet_path\") helps you building server controller for request processing\r\n\r\n```\r\n@ThriftHandler(\"/api\")\r\npublic class TGreetingServiceHandler implements TGreetingService.Iface {\r\n\r\n    @Override\r\n    public String greet(TName name) throws TException {\r\n        // your logic\r\n    }\r\n}\r\n```\r\n\r\nOther annotation @ThriftClient(serviceId = \"registered_service\", (path) = \"server_handler_path\") helps you with multithreaded client with full Spring Cloud support.\r\n\r\n```\r\n@ThriftClient(serviceId = \"greeting-service\", path = \"/api\")\r\nTGreetingService.Client client;\r\n```\r\n\r\n###Thrift Client configuration\r\n\r\n```\r\ngreeting-service:                     #service name\r\n  endpoint: http://localhost:8080/api #direct endpoint\r\n  ribbon:                             #manually ribbon\r\n      listOfServers: localhost:8080\r\n  path: /service                      #general path\r\n```\r\n\r\nIf you use service discovery backend (as Eureka or Consul) only path maybe needed.\r\n\r\nSee tests for better understanding.\r\n\r\n## Enjoy!\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}