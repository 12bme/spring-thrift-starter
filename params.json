{
  "name": "Apache Thrift Starter for Spring Boot",
  "tagline": "Set of cool annotations that helps you building Thrift applications with Spring Boot.",
  "body": "## What it is about\r\n\r\nSet of cool annotations that helps you building Thrift applications with Spring Boot.\r\n\r\n## How to connect the project\r\n\r\nIts very simple:\r\n\r\n```\r\nrepositories {\r\n    jcenter()\r\n}\r\n```\r\n\r\n```\r\ncompile 'info.developerblog.spring.thrift:spring-thrift-starter:1.0.0.RELEASE'\r\n```\r\n\r\n## How to use this\r\n\r\n### Server-side\r\nAnnotation @ThriftController(\"servlet_path\") helps you building server controller for request processing\r\n\r\n```\r\n@ThriftController(\"/api\")\r\npublic class TGreetingServiceController implements TGreetingService.Iface {\r\n\r\n    @Override\r\n    public String greet(TName name) throws TException {\r\n        // your logic\r\n    }\r\n}\r\n```\r\n### Client-side\r\n@ThriftClient(serviceId = \"registered_service\", (path) = \"server_handler_path\") helps you with multithreaded client with full Spring Cloud support.\r\n```\r\n@ThriftClient(serviceId = \"greeting-service\", path = \"/api\")\r\nTGreetingService.Client client;\r\n```\r\n\r\n@ThriftClientsMap(mapperClass) annotation helps to create a string-keyed map of clients for a set of services having the same interface, allowing to define the concrete callee instance at runtime:\r\n```\r\n@ThriftClientsMap(mapperClass = SampleMapper.class)\r\nMap<String, TGreetingService.Client> clientsMap;\r\n```\r\nMapper class requirements:\r\n* must extend AbstractThriftClientKeyMapper\r\n* must be registered as a bean in the application context\r\n\r\n#### Thrift Client configuration\r\n\r\n```\r\ngreeting-service:                     #service name\r\n  endpoint: http://localhost:8080/api #direct endpoint\r\n  ribbon:                             #manually ribbon\r\n      listOfServers: localhost:8080\r\n  path: /service                      #general path\r\n  connectTimeout: 1000                #default=1000\r\n  readTimeout: 10000                  #default=30000\r\n```\r\n\r\nIf you use service discovery backend (as Eureka or Consul) only path maybe needed.\r\n\r\nSee tests for better understanding.\r\n\r\n### Sleuth support\r\nSince 1.0.0.RC1 starter have supported [Spring Cloud Sleuth](https://cloud.spring.io/spring-cloud-sleuth) for tracing.\r\n\r\n`RequestIdFilter` and `RequestIdLogger` was eliminated in this version of this starter.\r\n\r\n## Special thanks to\r\n\r\n* [@bsideup](https://github.com/bsideup) who inspired me with his [project](https://github.com/bsideup/thrift-spring-boot-starter)\r\n* [@lavcraft](https://github.com/lavcraft) who was helping me when I've been stucked\r\n\r\n## Enjoy!\r\n\r\n\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}